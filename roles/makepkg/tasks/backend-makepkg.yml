- name: Check if package {{ package_name }} is already installed
  shell: set -o pipefail || exit 1; pacman -Qsq |
    { grep '^'{{ package_name | quote }}'$' ; [ $? -lt 2 ]; }
  register: _package_installed
  changed_when: no

- name: Make and install {{ package_name }}
  become: true
  become_user: "{{ build_user }}"
  when: _package_installed.stdout == ""
  block:
    - name: Create temporary build directory
      tempfile:
        state: directory
      register: _tempdir
      
    - name: Download package from the AUR
      unarchive:
        remote_src: true
        src: "{{ makepkg_aur_url }}{{ package_name }}.tar.gz"
        dest: "{{ _tempdir.path }}"
        
    - name: Run makepkg
      shell: cd '{{ _tempdir.path | quote }}/{{ package_name | quote }}' && makepkg -rsi --noconfirm
  always:
    - name: Remove temporary build directory
      file:
        state: absent
        path: "{{ _tempdir.path }}"